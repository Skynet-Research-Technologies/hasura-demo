---
kind: ObjectType
version: v1
definition:
  name: Teams
  fields:
    - name: id
      type: Int32!
    - name: name
      type: String_1!
    - name: sportId
      type: Int32
    - name: tenantId
      type: String_1!
  graphql:
    typeName: Teams
    inputTypeName: TeamsInput
  dataConnectorTypeMapping:
    - dataConnectorName: mydb
      dataConnectorObjectType: teams
      fieldMapping:
        id:
          column:
            name: id
        name:
          column:
            name: name
        sportId:
          column:
            name: sport_id
        tenantId:
          column:
            name: tenant_id

---
kind: TypePermissions
version: v1
definition:
  typeName: Teams
  permissions:
    - role: admin
      output:
        allowedFields:
          - id
          - name
          - sportId
          - tenantId

---
kind: BooleanExpressionType
version: v1
definition:
  name: TeamsBoolExp
  operand:
    object:
      type: Teams
      comparableFields:
        - fieldName: id
          booleanExpressionType: Int4BoolExp
        - fieldName: name
          booleanExpressionType: TextBoolExp
        - fieldName: sportId
          booleanExpressionType: Int4BoolExp
        - fieldName: tenantId
          booleanExpressionType: TextBoolExp
      comparableRelationships:
        - relationshipName: people
        - relationshipName: sport
        - relationshipName: fixtures
        - relationshipName: fixturesByHomeTeamId
        - relationshipName: results
  logicalOperators:
    enable: true
  isNull:
    enable: true
  graphql:
    typeName: TeamsBoolExp

---
kind: AggregateExpression
version: v1
definition:
  name: TeamsAggExp
  operand:
    object:
      aggregatedType: Teams
      aggregatableFields:
        - fieldName: id
          aggregateExpression: Int4AggExp
        - fieldName: name
          aggregateExpression: TextAggExp
        - fieldName: sportId
          aggregateExpression: Int4AggExp
        - fieldName: tenantId
          aggregateExpression: TextAggExp
  count:
    enable: true
  graphql:
    selectTypeName: TeamsAggExp

---
kind: OrderByExpression
version: v1
definition:
  name: TeamsOrderByExp
  operand:
    object:
      orderedType: Teams
      orderableFields:
        - fieldName: id
          orderByExpression: Int32OrderByExp
        - fieldName: name
          orderByExpression: String1OrderByExp
        - fieldName: sportId
          orderByExpression: Int32OrderByExp
        - fieldName: tenantId
          orderByExpression: String1OrderByExp
      orderableRelationships:
        - relationshipName: sport
  graphql:
    expressionTypeName: TeamsOrderByExp

---
kind: Model
version: v2
definition:
  name: Teams
  objectType: Teams
  source:
    dataConnectorName: mydb
    collection: teams
  filterExpressionType: TeamsBoolExp
  aggregateExpression: TeamsAggExp
  orderByExpression: TeamsOrderByExp
  graphql:
    selectMany:
      queryRootField: teams
      subscription:
        rootField: teams
    selectUniques:
      - queryRootField: teamsById
        uniqueIdentifier:
          - id
        subscription:
          rootField: teamsById
    filterInputTypeName: TeamsFilterInput
    aggregate:
      queryRootField: teamsAggregate
      subscription:
        rootField: teamsAggregate

---
kind: ModelPermissions
version: v1
definition:
  modelName: Teams
  permissions:
    - role: admin
      select:
        filter: null
        allowSubscriptions: true

---
kind: Relationship
version: v1
definition:
  name: people
  sourceType: Teams
  target:
    model:
      name: People
      relationshipType: Array
      aggregate:
        aggregateExpression: PeopleAggExp
  mapping:
    - source:
        fieldPath:
          - fieldName: id
      target:
        modelField:
          - fieldName: teamId
  graphql:
    aggregateFieldName: peopleAggregate

---
kind: Relationship
version: v1
definition:
  name: sport
  sourceType: Teams
  target:
    model:
      name: Sport
      relationshipType: Object
  mapping:
    - source:
        fieldPath:
          - fieldName: sportId
      target:
        modelField:
          - fieldName: id

---
kind: Relationship
version: v1
definition:
  name: fixtures
  sourceType: Teams
  target:
    model:
      name: Fixtures
      relationshipType: Array
      aggregate:
        aggregateExpression: FixturesAggExp
  mapping:
    - source:
        fieldPath:
          - fieldName: id
      target:
        modelField:
          - fieldName: awayTeamId
  graphql:
    aggregateFieldName: fixturesAggregate

---
kind: Relationship
version: v1
definition:
  name: fixturesByHomeTeamId
  sourceType: Teams
  target:
    model:
      name: Fixtures
      relationshipType: Array
      aggregate:
        aggregateExpression: FixturesAggExp
  mapping:
    - source:
        fieldPath:
          - fieldName: id
      target:
        modelField:
          - fieldName: homeTeamId
  graphql:
    aggregateFieldName: fixturesByHomeTeamIdAggregate

---
kind: Relationship
version: v1
definition:
  name: results
  sourceType: Teams
  target:
    model:
      name: Results
      relationshipType: Array
      aggregate:
        aggregateExpression: ResultsAggExp
  mapping:
    - source:
        fieldPath:
          - fieldName: id
      target:
        modelField:
          - fieldName: winnerId
  graphql:
    aggregateFieldName: resultsAggregate

